name: 'Poetry_Dependencies'
on: 
    workflow_call:
        inputs:
           caching:
             description: 'whether to cache dependencies or not'
             required: true
             default: true
             type: boolean
           python_version:
              description: 'python version from the matrix'
              required: true
              type: string
           poetry_version:
                description: 'poetry version for the cache key'
                required: true
                type: string              
        outputs:
            cache_result:
              description: The result of the cache check.
              value: ${{ jobs.cache_install_and_dependencies.outputs.cache_check }}          

jobs:
  cache_install_and_dependencies:
    outputs:
       cache_check: ${{ steps.cached_dependencies.outputs.cache-hit }}
    runs-on: ubuntu-latest 
    steps:
    #----------------------------------------------
    #------  cache Poetry and dependencies  -------
    #----------------------------------------------  
    - name: Cache poetry installation
      if: inputs.caching == 'true'
      shell: bash
      run: | 
        echo "using cached Poetry version - ${{ inputs.poetry_version }} and pyenv python version: ${{ inputs.python_version }}"
    - name: Cache Packages
      if: inputs.caching == 'true'
      id: cached_dependencies
      shell: bash
      run: | 
        echo "using cached PPackages in Poetry env."



